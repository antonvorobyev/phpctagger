<?php

namespace PhpCtagger\Composer\Script;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-11-20 at 06:56:07.
 */
class CtaggerTest extends \ComposerScriptTestCase
{

    /**
     * @var Tags directory
     */
    protected $tagsDir;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->tagsDir = PROJECT_ROOT_DIR . '/tests/_files/tags';
        $filesystem = new \Composer\Util\Filesystem();
        $filesystem->ensureDirectoryExists($this->tagsDir);

        parent::setUp();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        if (file_exists($this->tagsDir)) {
            $filesystem = new \Composer\Util\Filesystem();
            $filesystem->removeDirectory($this->tagsDir);
        }
        parent::tearDown();
    }

    public function testCtagDevModeTrue()
    {
        $devMode = true;

        $this->assertFileNotExists($this->tagsDir . '/tags');

        $this->composerMock->expects($this->once())
                ->method('getConfig')
                ->will($this->returnValue($this->composerConfig));

        $this->outputMock->expects($this->exactly(9))
                    ->method('write');
        
        $event = new \Composer\Script\Event('post-install-cmd', $this->composerMock, $this->consoleIO, $devMode);
        
        Ctagger::setTagsDir($this->tagsDir);
        Ctagger::ctag($event);

        $this->assertFileExists($this->tagsDir . '/tags');
    }

    /**
     * Ctagger should not be run when $devMode is false
     */
    public function testCtagDevModeFalse()
    {
        $devMode = false;

        $this->assertFileNotExists($this->tagsDir . '/tags');

        $this->composerMock->expects($this->exactly(0))
                ->method('getConfig')
                ->will($this->returnValue($this->composerConfig));

        $this->outputMock->expects($this->once())
            ->method('write')
            ->with('Composer is not in dev mode. Will not create/modify ctags file.');
        
        $event = new \Composer\Script\Event('post-install-cmd', $this->composerMock, $this->consoleIO, $devMode);
        
        Ctagger::setTagsDir($this->tagsDir);
        Ctagger::ctag($event);

        $this->assertFileNotExists($this->tagsDir . '/tags');
    }

    public function testGetInstalledCtags()
    {
        $this->assertEquals('ctags', Ctagger::getInstalledCtags());
    }

    public function testGetCtagsVersion()
    {
        $this->assertEquals('5.8', Ctagger::getCtagsVersion());
    } 

}
